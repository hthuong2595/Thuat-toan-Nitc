#include<bits/stdc++.h.
using namespace std;
int n; 
 vector<vector<int>> graph[n+1] 
 void dsKe(){
 	 cin >> n;
	 for(int i=1; i<=m; i++){
		int u, v; cin >> u >> v;
		graph[u].push_back(u);
		graph[v].push_back(v); 
	} 
 } 
 void dfs(vector<vector<int>> &graph, int start){
 	int n = graph.size();
	vector<bool> visited(n, false);
	stack<int> s;
	s.push();
	while(!s.empty){
		int node = s.top;
		s.pop();
		if(!visited[node]){
			cout << node << " ";
			visited[node] = true; 
		}
		for(int i=graph[node].size; i>=1; i--){
			int neighbor = graph[node][i]; 
			if(!visited[neighbor]){
				s.push(neighbor); 
			} 
		} 
	}  
 } 
 int main(){
	cin >> n;
	dfs(graph, 1); 
 }
